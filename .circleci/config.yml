# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.4
        environment:
          PIPENV_VENV_IN_PROJECT: true

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          - keys:
            - v2-pip-deps-{{ .Branch }}-{{ checksum "backend/Pipfile.lock" }}
            - v2-pip-deps-{{ .Branch }}-
            - v2-pip-deps-master
            - v2-pip-deps-

      - run:
          name: install dependencies
          command: |
            pipenv sync --dev

      - save_cache:
          paths:
            - '~/.local'
            - '~/.cache/black'
            - '~/.cache/pip'
            - '~/.cache/pipenv'
            - './.venv'
          key: v2-pip-deps-{{ .Branch }}-{{ checksum "backend/Pipfile.lock" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            pipenv run
            python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports